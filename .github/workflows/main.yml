name: CI/CD Pipeline for Sample3

on:
  push:
    branches:
      - stage  # Runs when code is pushed to 'stage' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Tests
        run: |
          pytest || echo "Tests failed, check logs for details"

  docker:
    needs: build  # Runs only if 'build' job succeeds
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t sample3-app .

      - name: Run Docker Container
        run: |
          docker run -d -p 8000:8000 sample3-app


  deploy:
    needs: docker  # Runs only if 'docker' job succeeds
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Allows pushing changes to main branch

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
         token: ${{ secrets.GITHUB_TOKEN }}  # Ensure GitHub token is used to access repo

      - name: Set up Git
        run: |
         git config --global user.name "Sibi04"
         git config --global user.email "psibi2004@gmail.com"

      - name: Fetch latest main branch
        run: |
         git fetch origin main  # Fetch the latest main branch from the remote

      - name: Merge stage â†’ main
        run: |
         git checkout main  # Checkout the main branch
         git merge stage --no-ff --allow-unrelated-histories  # Merge stage into main, no fast-forward merge
         git add .github/workflows/main.yml  # Stage the resolved conflict
         git commit -m "Msg5"
         git push origin main  # Push the merge to remote main branch

